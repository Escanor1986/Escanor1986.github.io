<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="fr"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://escanor1986.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://escanor1986.github.io/" rel="alternate" type="text/html" hreflang="fr"/><updated>2025-04-26T20:15:01+00:00</updated><id>https://escanor1986.github.io/feed.xml</id><title type="html">blank</title><subtitle>D√©veloppeur Fullstack Java/Angular passionn√©, sp√©cialis√© dans le d√©veloppement d&apos;applications web modernes, scalables et performantes. </subtitle><entry><title type="html">Comprendre l‚Äôutilisation du module next-image avec Storybook &amp;amp; TypeScript</title><link href="https://escanor1986.github.io/blog/2024/12/01/next-image-storybook-typescript/" rel="alternate" type="text/html" title="Comprendre l‚Äôutilisation du module next-image avec Storybook &amp;amp; TypeScript"/><published>2024-12-01T09:00:00+00:00</published><updated>2024-12-01T09:00:00+00:00</updated><id>https://escanor1986.github.io/blog/2024/12/01/next-image-storybook-typescript</id><content type="html" xml:base="https://escanor1986.github.io/blog/2024/12/01/next-image-storybook-typescript/"><![CDATA[<h1 id="utilisation-du-composant-nextimage-avec-storybook-et-typescript-Ô∏è">Utilisation du composant <code class="language-plaintext highlighter-rouge">next/image</code> avec Storybook et TypeScript üìïüõ†Ô∏èüìò</h1> <p><img src="/assets/img/ingenieur-pontage-pipeline.webp" alt="Un ing√©nieur travaillant sur le pontage de pipeline en ext√©rieur, pixel art"/></p> <h2 id="probl√©matique-">Probl√©matique üö®</h2> <p>Lorsque j‚Äôai d√©but√© un projet Next.js avec TypeScript et Storybook, j‚Äôai tr√®s vite √©t√© confront√© √† un souci tr√®s emb√™tant :<br/> Storybook ne trouvait pas les images import√©es depuis le dossier <code class="language-plaintext highlighter-rouge">public/images</code>, car il ne passe pas par le build Next.js lors de son propre processus de build.<br/> Vous obtenez donc un composant d√©pourvu d‚Äôimage dans votre story ou une erreur de compilation lors du lancement de Storybook.</p> <p>Ce petit d√©sagr√©ment m‚Äôa finalement pris la journ√©e enti√®re pour trouver une solution !</p> <h2 id="bootstrapping-">Bootstrapping üöÄ</h2> <p>Au d√©marrage, votre configuration Storybook ressemble √† ceci :</p> <h3 id="maints-storybookmaints"><code class="language-plaintext highlighter-rouge">main.ts</code> (./storybook/main.ts)</h3> <div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="kd">type</span> <span class="p">{</span> <span class="nx">StorybookConfig</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">@storybook/nextjs</span><span class="dl">"</span><span class="p">;</span>

<span class="kd">const</span> <span class="nx">config</span><span class="p">:</span> <span class="nx">StorybookConfig</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">stories</span><span class="p">:</span> <span class="p">[</span><span class="dl">"</span><span class="s2">../src/**/*.mdx</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">../src/**/*.stories.@(js|jsx|mjs|ts|tsx)</span><span class="dl">"</span><span class="p">],</span>
  <span class="na">addons</span><span class="p">:</span> <span class="p">[</span>
    <span class="dl">"</span><span class="s2">@storybook/addon-onboarding</span><span class="dl">"</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">@storybook/addon-links</span><span class="dl">"</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">@storybook/addon-essentials</span><span class="dl">"</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">@chromatic-com/storybook</span><span class="dl">"</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">@storybook/addon-interactions</span><span class="dl">"</span><span class="p">,</span>
  <span class="p">],</span>
  <span class="na">framework</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">@storybook/nextjs</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">options</span><span class="p">:</span> <span class="p">{},</span>
  <span class="p">},</span>
  <span class="na">typescript</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">check</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
    <span class="na">checkOptions</span><span class="p">:</span> <span class="p">{},</span>
    <span class="na">skipCompiler</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
  <span class="p">},</span>
<span class="p">};</span>
<span class="k">export</span> <span class="k">default</span> <span class="nx">config</span><span class="p">;</span>
</code></pre></div></div> <h3 id="previewts-storybookpreviewts"><code class="language-plaintext highlighter-rouge">preview.ts</code> (./storybook/preview.ts)</h3> <div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="kd">type</span> <span class="p">{</span> <span class="nx">Preview</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">@storybook/react</span><span class="dl">"</span><span class="p">;</span>
<span class="k">import</span> <span class="dl">'</span><span class="s1">../src/app/globals.css</span><span class="dl">'</span><span class="p">;</span>

<span class="kd">const</span> <span class="nx">preview</span><span class="p">:</span> <span class="nx">Preview</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">parameters</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">controls</span><span class="p">:</span> <span class="p">{</span>
      <span class="na">matchers</span><span class="p">:</span> <span class="p">{</span>
        <span class="na">color</span><span class="p">:</span> <span class="sr">/</span><span class="se">(</span><span class="sr">background|color</span><span class="se">)</span><span class="sr">$/i</span><span class="p">,</span>
        <span class="na">date</span><span class="p">:</span> <span class="sr">/Date$/i</span><span class="p">,</span>
      <span class="p">},</span>
    <span class="p">},</span>
  <span class="p">},</span>
<span class="p">};</span>

<span class="k">export</span> <span class="k">default</span> <span class="nx">preview</span><span class="p">;</span>
</code></pre></div></div> <p>En l‚Äô√©tat, Storybook ne saura pas o√π chercher vos images Next.js, ce qui g√©n√®re les erreurs mentionn√©es ci-dessus.</p> <blockquote> <p><strong>‚Ä¶ Comment fait-on alors ?</strong> ü§îüí≠</p> </blockquote> <h2 id="override-de-nextimage-pour-storybook-">Override de <code class="language-plaintext highlighter-rouge">next/image</code> pour Storybook üéØ</h2> <h3 id="1-mettre-√†-jour-maints">1. Mettre √† jour <code class="language-plaintext highlighter-rouge">main.ts</code></h3> <p>Ajoutez la configuration <code class="language-plaintext highlighter-rouge">staticDirs</code> pour indiquer √† Storybook o√π trouver les fichiers statiques :</p> <div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="kd">type</span> <span class="p">{</span> <span class="nx">StorybookConfig</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">@storybook/nextjs</span><span class="dl">"</span><span class="p">;</span>
<span class="k">import</span> <span class="o">*</span> <span class="kd">as </span><span class="nx">path</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">path</span><span class="dl">"</span><span class="p">;</span>

<span class="kd">const</span> <span class="nx">config</span><span class="p">:</span> <span class="nx">StorybookConfig</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">stories</span><span class="p">:</span> <span class="p">[</span><span class="dl">"</span><span class="s2">../src/**/*.mdx</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">../src/**/*.stories.@(js|jsx|mjs|ts|tsx)</span><span class="dl">"</span><span class="p">],</span>
  <span class="na">addons</span><span class="p">:</span> <span class="p">[</span>
    <span class="dl">"</span><span class="s2">@storybook/addon-links</span><span class="dl">"</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">@storybook/addon-essentials</span><span class="dl">"</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">@storybook/addon-onboarding</span><span class="dl">"</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">@storybook/addon-interactions</span><span class="dl">"</span><span class="p">,</span>
  <span class="p">],</span>
  <span class="na">framework</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">@storybook/nextjs</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">options</span><span class="p">:</span> <span class="p">{</span>
      <span class="na">nextConfigPath</span><span class="p">:</span> <span class="nx">path</span><span class="p">.</span><span class="nf">resolve</span><span class="p">(</span><span class="nx">__dirname</span><span class="p">,</span> <span class="dl">"</span><span class="s2">../next.config.js</span><span class="dl">"</span><span class="p">),</span>
      <span class="na">builder</span><span class="p">:</span> <span class="p">{</span>
        <span class="na">useSWC</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
      <span class="p">},</span>
    <span class="p">},</span>
  <span class="p">},</span>
  <span class="na">docs</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">autodocs</span><span class="p">:</span> <span class="dl">"</span><span class="s2">tag</span><span class="dl">"</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="c1">// Sp√©cifie le dossier d'images statiques</span>
  <span class="na">staticDirs</span><span class="p">:</span> <span class="p">[{</span> <span class="na">from</span><span class="p">:</span> <span class="nx">path</span><span class="p">.</span><span class="nf">resolve</span><span class="p">(</span><span class="nx">__dirname</span><span class="p">,</span> <span class="dl">'</span><span class="s1">../public/images</span><span class="dl">'</span><span class="p">),</span> <span class="na">to</span><span class="p">:</span> <span class="dl">'</span><span class="s1">/images</span><span class="dl">'</span> <span class="p">}],</span>
  <span class="na">typescript</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">check</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
    <span class="na">checkOptions</span><span class="p">:</span> <span class="p">{},</span>
    <span class="na">skipCompiler</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
  <span class="p">},</span>
<span class="p">};</span>

<span class="k">export</span> <span class="k">default</span> <span class="nx">config</span><span class="p">;</span>
</code></pre></div></div> <h3 id="2-adapter-previewts">2. Adapter <code class="language-plaintext highlighter-rouge">preview.ts</code></h3> <p>On remplace temporairement <code class="language-plaintext highlighter-rouge">next/image</code> par la balise native <code class="language-plaintext highlighter-rouge">&lt;img&gt;</code> dans Storybook :</p> <div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">React</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="kd">type</span> <span class="p">{</span> <span class="nx">Preview</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">@storybook/react</span><span class="dl">"</span><span class="p">;</span>
<span class="k">import</span> <span class="dl">'</span><span class="s1">../src/app/globals.css</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="o">*</span> <span class="kd">as </span><span class="nx">nextImage</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">next/image</span><span class="dl">'</span><span class="p">;</span>

<span class="kd">const</span> <span class="nx">preview</span><span class="p">:</span> <span class="nx">Preview</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">parameters</span><span class="p">:</span> <span class="p">{</span>
    <span class="na">controls</span><span class="p">:</span> <span class="p">{</span>
      <span class="na">matchers</span><span class="p">:</span> <span class="p">{</span>
        <span class="na">color</span><span class="p">:</span> <span class="sr">/</span><span class="se">(</span><span class="sr">background|color</span><span class="se">)</span><span class="sr">$/i</span><span class="p">,</span>
        <span class="na">date</span><span class="p">:</span> <span class="sr">/Date$/i</span><span class="p">,</span>
      <span class="p">},</span>
    <span class="p">},</span>
    <span class="na">actions</span><span class="p">:</span> <span class="p">{</span> <span class="na">argTypesRegex</span><span class="p">:</span> <span class="dl">'</span><span class="s1">^on[A-Z].*</span><span class="dl">'</span> <span class="p">},</span>
  <span class="p">},</span>
<span class="p">};</span>

<span class="k">if </span><span class="p">(</span><span class="nb">Object</span><span class="p">.</span><span class="nf">getOwnPropertyDescriptor</span><span class="p">(</span><span class="nx">nextImage</span><span class="p">,</span> <span class="dl">'</span><span class="s1">default</span><span class="dl">'</span><span class="p">)?.</span><span class="nx">configurable</span><span class="p">)</span> <span class="p">{</span>
  <span class="nb">Object</span><span class="p">.</span><span class="nf">defineProperty</span><span class="p">(</span><span class="nx">nextImage</span><span class="p">,</span> <span class="dl">'</span><span class="s1">default</span><span class="dl">'</span><span class="p">,</span> <span class="p">{</span>
    <span class="na">configurable</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="na">value</span><span class="p">:</span> <span class="p">(</span><span class="na">props</span><span class="p">:</span> <span class="nx">React</span><span class="p">.</span><span class="nx">ImgHTMLAttributes</span><span class="o">&lt;</span><span class="nx">HTMLImageElement</span><span class="o">&gt;</span><span class="p">)</span> <span class="o">=&gt;</span>
      <span class="nx">React</span><span class="p">.</span><span class="nf">createElement</span><span class="p">(</span><span class="dl">'</span><span class="s1">img</span><span class="dl">'</span><span class="p">,</span> <span class="nx">props</span><span class="p">),</span>
  <span class="p">});</span>
<span class="p">}</span>

<span class="k">export</span> <span class="k">default</span> <span class="nx">preview</span><span class="p">;</span>
</code></pre></div></div> <p>Ce code <strong>override</strong> le composant <code class="language-plaintext highlighter-rouge">next/image</code> pour qu‚Äôil rende une balise <code class="language-plaintext highlighter-rouge">&lt;img&gt;</code> basique, compatible avec l‚Äôenvironnement de Storybook.</p> <h2 id="application-dans-vos-stories-">Application dans vos stories üß©üìïü™Ñ</h2> <p>Dans vos fichiers <code class="language-plaintext highlighter-rouge">*.stories.tsx</code>, utilisez d√©sormais le chemin <code class="language-plaintext highlighter-rouge">/images</code> pour r√©f√©rencer vos images :</p> <p>```ts import { Meta, StoryObj } from ‚Äò@storybook/react‚Äô; import Logo from ‚Äò../components/Logo/Logo‚Äô;</p> <p>const meta: Meta<typeof Logo=""> = { title: 'Components/Logo', component: Logo, argTypes: { src: { control: 'text' }, alt: { control: 'text' }, width: { control: 'number' }, height: { control: 'number' }, }, };</typeof></p> <p>export default meta; type Story = StoryObj<typeof Logo="">;</typeof></p> <p>export const Main: Story = { args: { src: ‚Äò/images/Logo.webp‚Äô, // &lt;‚Äì Chemin adapt√© alt: ‚ÄòLogo Dietetic‚Äô, width: 75, height: 75, }, };</p>]]></content><author><name>Lionel Zovi</name></author><category term="Fiche technique"/><category term="next-image"/><category term="storybook"/><category term="typescript"/><summary type="html"><![CDATA[D√©couvrez comment utiliser le composant next/image dans Storybook avec TypeScript, en configurant Storybook pour afficher correctement les images Next.js.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://escanor1986.github.io/assets/img/ingenieur-pontage-pipeline.webp"/><media:content medium="image" url="https://escanor1986.github.io/assets/img/ingenieur-pontage-pipeline.webp" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry><title type="html">Comprendre l‚Äôasynchrone en JavaScript</title><link href="https://escanor1986.github.io/blog/2024/09/15/comprendre-asynchrone-javascript/" rel="alternate" type="text/html" title="Comprendre l‚Äôasynchrone en JavaScript"/><published>2024-09-15T08:00:00+00:00</published><updated>2024-09-15T08:00:00+00:00</updated><id>https://escanor1986.github.io/blog/2024/09/15/comprendre-asynchrone-javascript</id><content type="html" xml:base="https://escanor1986.github.io/blog/2024/09/15/comprendre-asynchrone-javascript/"><![CDATA[<h1 id="comprendre-lasynchrone-en-javascript-">Comprendre l‚ÄôAsynchrone en JavaScript üöÄ</h1> <p><img src="/assets/img/asynchrone_js.webp" alt="Une personne multit√¢che au bureau avec un symbole de boucle infinie, pixel art"/></p> <h2 id="javascript-est-il-asynchrone--Ô∏è">JavaScript est-il asynchrone ? ‚è±Ô∏è</h2> <p>Cela va peut-√™tre en surprendre certains, mais <strong>non</strong> ! JavaScript est bel et bien <strong>synchrone</strong> et <strong>single-threaded</strong> : √† l‚Äôexception des portions de code explicitement asynchrones, tout est ex√©cut√© s√©quentiellement. L‚Äôasynchronisme, quant √† lui, est g√©r√© en parall√®le via l‚ÄôEvent Loop et la Callback Queue.</p> <h2 id="quest-ce-que-lasynchronisme-en-javascript--">Qu‚Äôest-ce que l‚Äôasynchronisme en JavaScript ? ü§î</h2> <p>Imaginez commander une pizza : vous passez votre commande, puis vous regardez Netflix, r√©solvez un exo sur Codewars ou faites une sieste. Quand la pizza est pr√™te, on sonne √† votre porte ! En JavaScript, c‚Äôest pareil : on lance une op√©ration (API, timer, etc.), on continue d‚Äôex√©cuter le reste du code, et d√®s que la r√©ponse arrive, on reprend l√† o√π on s‚Äô√©tait arr√™t√©.</p> <blockquote> <p>Ces explications sont plus techniques, mais elles am√©lioreront votre compr√©hension de l‚Äôasynchrone ! Prenez un caf√© ‚òï et c‚Äôest parti !</p> </blockquote> <hr/> <h2 id="1-levent-loop--le-c≈ìur-de-lasynchrone-">1. L‚ÄôEvent Loop : le c≈ìur de l‚Äôasynchrone üîÑ</h2> <ul> <li><strong>Call Stack</strong> : pile d‚Äôex√©cution synchrone.</li> <li><strong>Callback Queue</strong> : file FIFO des callbacks asynchrones.</li> <li><strong>Event Loop</strong> : d√®s que la Call Stack est vide, il d√©place le premier callback de la Callback Queue vers la Call Stack pour ex√©cution.</li> </ul> <hr/> <h2 id="2-exemple-simple">2. Exemple simple</h2> <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Timer</span>
<span class="nf">setTimeout</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Ce message est affich√© apr√®s 1 seconde</span><span class="dl">"</span><span class="p">);</span>
<span class="p">},</span> <span class="mi">1000</span><span class="p">);</span>

<span class="c1">// Requ√™te AJAX</span>
<span class="nf">fetch</span><span class="p">(</span><span class="dl">'</span><span class="s1">https://api.example.com/data</span><span class="dl">'</span><span class="p">)</span>
  <span class="p">.</span><span class="nf">then</span><span class="p">(</span><span class="nx">response</span> <span class="o">=&gt;</span> <span class="nx">response</span><span class="p">.</span><span class="nf">json</span><span class="p">())</span>
  <span class="p">.</span><span class="nf">then</span><span class="p">(</span><span class="nx">data</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">R√©ponse AJAX re√ßue :</span><span class="dl">"</span><span class="p">,</span> <span class="nx">data</span><span class="p">);</span>
  <span class="p">})</span>
  <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="nx">error</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nf">error</span><span class="p">(</span><span class="dl">"</span><span class="s2">Erreur lors de la requ√™te AJAX :</span><span class="dl">"</span><span class="p">,</span> <span class="nx">error</span><span class="p">);</span>
  <span class="p">});</span>

<span class="c1">// Message synchrone</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Ce message est affich√© imm√©diatement, avant les callbacks</span><span class="dl">"</span><span class="p">);</span>
</code></pre></div></div> <hr/> <h2 id="3-pourquoi-lasynchronisme-est-il-important--">3. Pourquoi l‚Äôasynchronisme est-il important ? üåü</h2> <ul> <li><strong>Interface r√©active</strong> : l‚Äôutilisateur peut continuer √† interagir pendant les op√©rations longues.</li> <li><strong>Performances</strong> : r√©seau, bases de donn√©es‚Ä¶, sans bloquer la boucle principale.</li> </ul> <hr/> <h2 id="4-les-trois-mousquetaires-de-lasynchronisme-">4. Les Trois Mousquetaires de l‚Äôasynchronisme üèáüèΩ</h2> <h3 id="callbacks-Ô∏è">Callbacks üè¥‚Äç‚ò†Ô∏è</h3> <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Commander une pizza</span><span class="dl">'</span><span class="p">);</span>
<span class="nf">setTimeout</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Pizza livr√©e !</span><span class="dl">'</span><span class="p">);</span>
<span class="p">},</span> <span class="mi">3000</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Regarder une s√©rie en attendant</span><span class="dl">'</span><span class="p">);</span>
</code></pre></div></div> <p><em>Inconv√©nient : ‚Äúcallback hell‚Äù</em> üî•üò±</p> <hr/> <h3 id="promises-">Promises üéÅ</h3> <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">commanderPizza</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Promise</span><span class="p">((</span><span class="nx">resolve</span><span class="p">,</span> <span class="nx">reject</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="nf">setTimeout</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="nf">resolve</span><span class="p">(</span><span class="dl">'</span><span class="s1">Pizza livr√©e !</span><span class="dl">'</span><span class="p">),</span> <span class="mi">3000</span><span class="p">);</span>
<span class="p">});</span>

<span class="nx">commanderPizza</span>
  <span class="p">.</span><span class="nf">then</span><span class="p">(</span><span class="nx">message</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">message</span><span class="p">);</span>
    <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Manger la pizza</span><span class="dl">'</span><span class="p">);</span>
  <span class="p">})</span>
  <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="nx">error</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nf">error</span><span class="p">(</span><span class="dl">'</span><span class="s1">Erreur :</span><span class="dl">'</span><span class="p">,</span> <span class="nx">error</span><span class="p">);</span>
  <span class="p">});</span>
</code></pre></div></div> <p><em>Plus lisible, gestion d‚Äôerreurs int√©gr√©e.</em></p> <hr/> <h3 id="asyncawait-Ô∏è">async/await üï∂Ô∏è</h3> <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">async</span> <span class="kd">function</span> <span class="nf">commanderPizzaEtManger</span><span class="p">()</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Commander une pizza</span><span class="dl">'</span><span class="p">);</span>
  <span class="k">try</span> <span class="p">{</span>
    <span class="kd">let</span> <span class="nx">message</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">commanderPizza</span><span class="p">;</span>
    <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">message</span><span class="p">);</span>
    <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Manger la pizza</span><span class="dl">'</span><span class="p">);</span>
  <span class="p">}</span> <span class="k">catch </span><span class="p">(</span><span class="nx">error</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nf">error</span><span class="p">(</span><span class="dl">'</span><span class="s1">Erreur :</span><span class="dl">'</span><span class="p">,</span> <span class="nx">error</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="nf">commanderPizzaEtManger</span><span class="p">();</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Regarder une s√©rie en attendant</span><span class="dl">'</span><span class="p">);</span>
</code></pre></div></div> <p><em>Syntaxe proche du synchrone, plus facile √† suivre.</em></p> <hr/> <h2 id="en-r√©sum√©-">En r√©sum√© üìù</h2> <p>L‚Äôasynchronisme en JavaScript permet d‚Äôex√©cuter des op√©rations lentes en arri√®re-plan sans bloquer la boucle principale. Callbacks, Promises et async/await sont vos alli√©s pour un code r√©actif et performant. Bon code ! üçïüíª</p> <h2 id="ressources">Ressources</h2> <ul> <li><a href="https://developer.mozilla.org/fr/docs/Learn/JavaScript/Asynchronous">MDN ‚Äì Asynchronous JavaScript</a></li> <li><a href="https://javascript.info/async">JavaScript.info ‚Äì Promises, Async/Await</a></li> <li><a href="https://www.youtube.com/watch?v=8aGhZQkoFbQ">Philip Roberts ‚Äì What the heck is the event loop anyway?</a></li> <li><a href="https://www.freecodecamp.org/news/asynchronous-javascript-explained/">FreeCodeCamp ‚Äì Asynchronous JavaScript Explained</a></li> <li><a href="https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/">Jake Archibald ‚Äì Tasks, microtasks, queues and schedules</a></li> <li><a href="https://flaviocopes.com/javascript-async-await/">Flavio Copes ‚Äì Callbacks vs Promises vs Async/Await</a></li> <li><a href="https://eloquentjavascript.net/11_async.html">Eloquent JavaScript ‚Äì Chapitre sur les Promises</a></li> </ul>]]></content><author><name>Lionel Zovi</name></author><category term="Fiche technique"/><category term="javascript"/><category term="asynchrone"/><category term="promesses"/><category term="callbacks"/><category term="async-await"/><summary type="html"><![CDATA[Explorez le fonctionnement de l'asynchrone en JavaScript. Apprenez les concepts cl√©s comme promesses, callbacks et async/await pour √©crire un code efficace et non-bloquant.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://escanor1986.github.io/assets/img/asynchrone_js.webp"/><media:content medium="image" url="https://escanor1986.github.io/assets/img/asynchrone_js.webp" xmlns:media="http://search.yahoo.com/mrss/"/></entry><entry><title type="html">Comprendre le mot clef ¬´ this ¬ª</title><link href="https://escanor1986.github.io/blog/2024/08/22/comprendre-mot-clef-this/" rel="alternate" type="text/html" title="Comprendre le mot clef ¬´ this ¬ª"/><published>2024-08-22T08:00:00+00:00</published><updated>2024-08-22T08:00:00+00:00</updated><id>https://escanor1986.github.io/blog/2024/08/22/comprendre-mot-clef-this</id><content type="html" xml:base="https://escanor1986.github.io/blog/2024/08/22/comprendre-mot-clef-this/"><![CDATA[<h1 id="comprendre-le-mot-clef-this">Comprendre le mot clef ‚Äúthis‚Äù</h1> <p><img src="/assets/img/this_context.webp" alt="Deux personnes dans une cuisine s√©par√©e, pixel art"/></p> <p>J‚Äôai r√©cemment √©t√© confront√© √† l‚Äôutilisation du mot cl√© <code class="language-plaintext highlighter-rouge">this</code> <a href="https://www.udemy.com/course/pro-javascript/">dans un cours sur JavaScript sur Udemy</a>.<br/> Le projet consistait √† r√©aliser un jeu de Puissance 4 en programmation orient√©e objet, ce qui m‚Äôa amen√© √† creuser les subtilit√©s de <code class="language-plaintext highlighter-rouge">this</code> dans divers contextes. <strong>Voici les principaux cas d‚Äôusage √† conna√Ætre :</strong></p> <ul> <li>Mode strict vs mode non-strict</li> <li>Contexte global (objet <code class="language-plaintext highlighter-rouge">window</code>), objets litt√©raux, fonctions (fl√©ch√©es ou classiques), classes</li> <li>M√©thodes d‚Äôinstance <code class="language-plaintext highlighter-rouge">.call()</code>, <code class="language-plaintext highlighter-rouge">.apply()</code> et <code class="language-plaintext highlighter-rouge">.bind()</code></li> <li>Contexte d‚Äôex√©cution vs environnement lexical</li> <li>M√©thodes int√©gr√©es (ex. <code class="language-plaintext highlighter-rouge">window.addEventListener</code>, <code class="language-plaintext highlighter-rouge">setTimeout</code>)</li> </ul> <p>Pour plus de d√©tails, consultez aussi la <a href="https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Operators/this">r√©f√©rence MDN sur <code class="language-plaintext highlighter-rouge">this</code></a>.</p> <h2 id="pourquoi-revenir-sur-this-en-javascript-">Pourquoi revenir sur <code class="language-plaintext highlighter-rouge">this</code> en JavaScript ?</h2> <p>Mal compris, <code class="language-plaintext highlighter-rouge">this</code> est source de bugs tenaces : erreurs de contexte, r√©f√©rences perdues‚Ä¶ Qui ne s‚Äôest pas arrach√© les cheveux apr√®s une demi-journ√©e de d√©bogage ? üòÖ</p> <p>Pour ma part, j‚Äôai frapp√© un mur en utilisant <code class="language-plaintext highlighter-rouge">this</code> dans un √©couteur d‚Äô√©v√©nement d√©fini en arrow function : le binding lexical m‚Äôa √©chapp√© !</p> <hr/> <h2 id="1-contexte-global-window">1. Contexte global (<code class="language-plaintext highlighter-rouge">window</code>)</h2> <p>Dans un script charg√© par le navigateur, le contexte global est l‚Äôobjet <code class="language-plaintext highlighter-rouge">window</code>.<br/> Qu‚Äôon soit en strict ou non-strict, un simple :</p> <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="k">this</span> <span class="o">===</span> <span class="nb">window</span><span class="p">);</span> <span class="c1">// true</span>
</code></pre></div></div> <p>confirme que <code class="language-plaintext highlighter-rouge">this</code> pointe vers <code class="language-plaintext highlighter-rouge">window</code>.<br/> Vous pouvez m√™me invoquer :</p> <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nb">document</span><span class="p">.</span><span class="nx">location</span><span class="p">);</span>
</code></pre></div></div> <hr/> <h2 id="2-objets-litt√©raux">2. Objets litt√©raux</h2> <blockquote> <p>Astuce : ‚ÄúQue y a-t-il √† gauche du <code class="language-plaintext highlighter-rouge">.</code> ?‚Äù<br/> <code class="language-plaintext highlighter-rouge">this</code> fait r√©f√©rence √† l‚Äôobjet qui pr√©c√®de le point.</p> </blockquote> <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">fluffy</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Fluffy</span><span class="dl">"</span><span class="p">,</span>
  <span class="na">color</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Rainbow</span><span class="dl">"</span><span class="p">,</span>
  <span class="na">species</span><span class="p">:</span> <span class="dl">"</span><span class="s2">Unicorn</span><span class="dl">"</span><span class="p">,</span>
  <span class="nf">sayHi</span><span class="p">(</span><span class="nx">style</span><span class="p">,</span> <span class="nx">humor</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="s2">`</span><span class="p">${</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">}</span><span class="s2"> the </span><span class="p">${</span><span class="nx">style</span><span class="p">}</span><span class="s2"> </span><span class="p">${</span><span class="k">this</span><span class="p">.</span><span class="nx">species</span><span class="p">}</span><span class="s2"> with the </span><span class="p">${</span><span class="k">this</span><span class="p">.</span><span class="nx">color</span><span class="p">}</span><span class="s2"> color and the </span><span class="p">${</span><span class="nx">humor</span><span class="p">}</span><span class="s2"> humor says hi!`</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">};</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nx">fluffy</span><span class="p">.</span><span class="nf">sayHi</span><span class="p">(</span><span class="dl">"</span><span class="s2">pretty</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">bright</span><span class="dl">"</span><span class="p">));</span>
<span class="c1">// Fluffy the pretty Unicorn with the Rainbow color and the bright humor says hi!</span>
</code></pre></div></div> <p><strong>Mode non-strict vs strict</strong> lorsque vous stockez la m√©thode :</p> <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">name</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">Global</span><span class="dl">"</span><span class="p">;</span>
<span class="nx">species</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">GlobalSpecies</span><span class="dl">"</span><span class="p">;</span>
<span class="nx">color</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">GlobalColor</span><span class="dl">"</span><span class="p">;</span>

<span class="kd">const</span> <span class="nx">fluffySayHi</span> <span class="o">=</span> <span class="nx">fluffy</span><span class="p">.</span><span class="nx">sayHi</span><span class="p">;</span>

<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nf">fluffySayHi</span><span class="p">(</span><span class="dl">"</span><span class="s2">pretty</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">bright</span><span class="dl">"</span><span class="p">));</span>
<span class="c1">// non-strict : 'Global the GlobalSpecies with the GlobalColor color says hi!'</span>
<span class="c1">// strict : undefined...</span>
</code></pre></div></div> <hr/> <h2 id="3-call-apply-bind">3. <code class="language-plaintext highlighter-rouge">.call()</code>, <code class="language-plaintext highlighter-rouge">.apply()</code>, <code class="language-plaintext highlighter-rouge">.bind()</code></h2> <h3 id="call"><code class="language-plaintext highlighter-rouge">.call()</code></h3> <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">fluffySayHi</span><span class="p">.</span><span class="nf">call</span><span class="p">(</span><span class="nx">fluffy</span><span class="p">,</span> <span class="dl">"</span><span class="s2">pretty</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">bright</span><span class="dl">"</span><span class="p">);</span>
</code></pre></div></div> <h3 id="apply"><code class="language-plaintext highlighter-rouge">.apply()</code></h3> <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">fluffySayHi</span><span class="p">.</span><span class="nf">apply</span><span class="p">(</span><span class="nx">fluffy</span><span class="p">,</span> <span class="p">[</span><span class="dl">"</span><span class="s2">pretty</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">bright</span><span class="dl">"</span><span class="p">]);</span>
</code></pre></div></div> <h3 id="bind"><code class="language-plaintext highlighter-rouge">.bind()</code></h3> <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">bound</span> <span class="o">=</span> <span class="nx">fluffy</span><span class="p">.</span><span class="nx">sayHi</span><span class="p">.</span><span class="nf">bind</span><span class="p">(</span><span class="nx">fluffy</span><span class="p">);</span>
<span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="nf">bound</span><span class="p">(</span><span class="dl">"</span><span class="s2">pretty</span><span class="dl">"</span><span class="p">,</span> <span class="dl">"</span><span class="s2">bright</span><span class="dl">"</span><span class="p">));</span>
</code></pre></div></div> <hr/> <h2 id="4-fonctions-fl√©ch√©es-vs-classiques">4. Fonctions fl√©ch√©es vs classiques</h2> <ul> <li> <p><strong>Fl√©ch√©es</strong> h√©ritent du <code class="language-plaintext highlighter-rouge">this</code> lexical :</p> <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">Unicorn</span><span class="p">(</span><span class="nx">name</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">this</span><span class="p">.</span><span class="nx">name</span> <span class="o">=</span> <span class="nx">name</span><span class="p">;</span>
  <span class="k">this</span><span class="p">.</span><span class="nx">getName</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">);</span>
<span class="p">}</span>
<span class="kd">const</span> <span class="nx">u</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Unicorn</span><span class="p">(</span><span class="dl">"</span><span class="s2">Fluffy</span><span class="dl">"</span><span class="p">);</span>
<span class="nf">setTimeout</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">getName</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span> <span class="c1">// 'Fluffy'</span>
</code></pre></div> </div> </li> <li> <p><strong>Classiques</strong> cr√©ent leur propre <code class="language-plaintext highlighter-rouge">this</code> selon l‚Äôappel :</p> <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nf">Unicorn</span><span class="p">(</span><span class="nx">name</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">this</span><span class="p">.</span><span class="nx">name</span> <span class="o">=</span> <span class="nx">name</span><span class="p">;</span>
  <span class="k">this</span><span class="p">.</span><span class="nx">getName</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span> <span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">);</span> <span class="p">};</span>
<span class="p">}</span>
<span class="kd">const</span> <span class="nx">u2</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Unicorn</span><span class="p">(</span><span class="dl">"</span><span class="s2">Fluffy</span><span class="dl">"</span><span class="p">);</span>
<span class="nf">setTimeout</span><span class="p">(</span><span class="nx">u2</span><span class="p">.</span><span class="nx">getName</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span> <span class="c1">// undefined</span>
</code></pre></div> </div> </li> </ul> <hr/> <h2 id="5-new-classes-es6-et-super">5. <code class="language-plaintext highlighter-rouge">new</code>, classes ES6 et <code class="language-plaintext highlighter-rouge">super</code></h2> <p>En ES6, le constructeur et les m√©thodes de classe utilisent <code class="language-plaintext highlighter-rouge">this</code> pour l‚Äôinstance :</p> <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">Unicorn</span> <span class="p">{</span>
  <span class="nf">constructor</span><span class="p">(</span><span class="nx">name</span><span class="p">)</span> <span class="p">{</span> <span class="k">this</span><span class="p">.</span><span class="nx">name</span> <span class="o">=</span> <span class="nx">name</span><span class="p">;</span> <span class="p">}</span>
  <span class="nf">getName</span><span class="p">()</span> <span class="p">{</span> <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">;</span> <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div> <p>Les arrow methods dans une classe h√©ritent aussi du <code class="language-plaintext highlighter-rouge">this</code> lexical de l‚Äôinstance.</p> <hr/> <h2 id="6-m√©thodes-globales-addeventlistener-settimeout">6. M√©thodes globales (<code class="language-plaintext highlighter-rouge">addEventListener</code>, <code class="language-plaintext highlighter-rouge">setTimeout</code>)</h2> <ul> <li><strong><code class="language-plaintext highlighter-rouge">addEventListener</code></strong> : <code class="language-plaintext highlighter-rouge">this</code> = l‚Äô√©l√©ment cible</li> <li><strong><code class="language-plaintext highlighter-rouge">setTimeout</code></strong> classique : <code class="language-plaintext highlighter-rouge">this</code> = <code class="language-plaintext highlighter-rouge">window</code> (ou <code class="language-plaintext highlighter-rouge">undefined</code> en strict)</li> <li>Rem√®de : arrow function ou <code class="language-plaintext highlighter-rouge">.bind(this)</code> dans le callback</li> </ul> <hr/> <p><em>Gardez toujours en t√™te que la valeur de <code class="language-plaintext highlighter-rouge">this</code> d√©pend du contexte d‚Äôex√©cution et de l‚Äôenvironnement lexical.</em> ‚òïü¶Ñ</p> <h2 id="ressources">Ressources</h2> <ul> <li><a href="https://www.udemy.com/course/pro-javascript/">Cours JavaScript sur Udemy</a></li> <li><a href="https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Operators/this">R√©f√©rence sur <code class="language-plaintext highlighter-rouge">this</code> - MDN Web Docs</a></li> <li><a href="https://www.geeksforgeeks.org/">Articles JavaScript - GeeksforGeeks</a></li> <li><a href="https://javascript.info/object-methods#method-this">Guide sur <code class="language-plaintext highlighter-rouge">this</code> et l‚Äôorientation objet - JavaScript.info</a></li> <li><a href="https://dyma.fr/cours/javascript">Tutoriels JavaScript - Dyma</a></li> </ul>]]></content><author><name>Lionel Zovi</name></author><category term="Fiche technique"/><category term="javascript"/><category term="this"/><category term="d√©butant"/><summary type="html"><![CDATA[D√©couvrez le mot-cl√© this en JavaScript avec des exemples concrets et apprenez ses subtilit√©s dans diff√©rents contextes.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://escanor1986.github.io/assets/img/this_context.webp"/><media:content medium="image" url="https://escanor1986.github.io/assets/img/this_context.webp" xmlns:media="http://search.yahoo.com/mrss/"/></entry></feed>